// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using DolgozoNyilvantartasKonzolos;
//
//    var worker = Worker.FromJson(jsonString);

namespace DolgozoNyilvantartasKonzolos
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Worker
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("salary")]
        public long Salary { get; set; }

        [JsonProperty("position")]
        public string Position { get; set; }
    }

    public partial class Worker
    {
        public static Worker[] FromJson(string json) => JsonConvert.DeserializeObject<Worker[]>(json, DolgozoNyilvantartasKonzolos.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this Worker[] self) => JsonConvert.SerializeObject(self, DolgozoNyilvantartasKonzolos.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }

}
